name: x86_64Lite

on:
  repository_dispatch:
  workflow_dispatch:

env:
  OPNAME: 'x86_64Lite'
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  EXTERNAL_FILE: configs/luci/Lite.config
  CONFIG_FILE: configs/x86_64.config
  SYS_CONF_SH: configure.sh
  PACKS: package.sh
  EXTEND_DRIVER: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* 
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://raw.githubusercontent.com/aoxijy/gqru-openwrt/refs/heads/main/openwrt-env)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        # 创建基本目录结构
        sudo mkdir -p /github-builder
        sudo chown $USER:$GROUPS /github-builder

    # 释放Ubuntu磁盘空间
    - name: Free up Ubuntu disk space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: true
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true

    # 创建模拟物理磁盘并挂载到/github-builder
    - name: Create virtual physical disk
      run: |
        mnt_size=$(expr $(df -h /mnt | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 1)
        root_size=$(expr $(df -h / | tail -1 | awk '{print $4}' | sed 's/[[:alpha:]]//g' | sed 's/\..*//') - 4)
        sudo truncate -s "${mnt_size}"G /mnt/mnt.img
        sudo truncate -s "${root_size}"G /root.img
        sudo losetup /dev/loop6 /mnt/mnt.img
        sudo losetup /dev/loop7 /root.img
        sudo pvcreate /dev/loop6
        sudo pvcreate /dev/loop7
        sudo vgcreate github /dev/loop6 /dev/loop7
        sudo lvcreate -n runner -l 100%FREE github
        sudo mkfs.xfs /dev/github/runner
        sudo mount /dev/github/runner /github-builder
        sudo chown -R $USER:$GROUPS /github-builder
        df -Th

    - name: Clone source code
      working-directory: /github-builder
      run: |
        df -hT $PWD
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /github-builder/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Cache
      uses: stupidloud/cachewrtbuild@main
      with:
          ccache: 'true'
          mixkey: 'x86'
          prefix: 'openwrt'

    - name: Load custom feeds
      working-directory: /github-builder/openwrt
      run: |
        [ -e $GITHUB_WORKSPACE/$FEEDS_CONF ] && cp $GITHUB_WORKSPACE/$FEEDS_CONF feeds.conf.default
        chmod +x $GITHUB_WORKSPACE/$SYS_CONF_SH
        $GITHUB_WORKSPACE/$SYS_CONF_SH

    - name: Update feeds
      working-directory: /github-builder/openwrt
      run: ./scripts/feeds update -a

    - name: Install feeds
      working-directory: /github-builder/openwrt
      run: ./scripts/feeds install -a

    - name: Load custom configuration
      working-directory: /github-builder/openwrt
      run: |
        [ -e $GITHUB_WORKSPACE/files ] && cp -r $GITHUB_WORKSPACE/files ./
        [ -e $GITHUB_WORKSPACE/$CONFIG_FILE ] && cp $GITHUB_WORKSPACE/$CONFIG_FILE .config
        chmod +x $GITHUB_WORKSPACE/$PACKS
        $GITHUB_WORKSPACE/$PACKS

    - name: Extend Driver
      if: env.EXTEND_DRIVER == 'true'
      working-directory: /github-builder/openwrt
      run: |
        cat $GITHUB_WORKSPACE/configs/Driver.config >> .config

    - name: Modify configuration
      working-directory: /github-builder/openwrt
      run: |
        cat $GITHUB_WORKSPACE/$EXTERNAL_FILE >> .config
        make defconfig
        sed -i '/CONFIG_DEFAULT_luci/'d .config
        cat .config

    - name: Download package
      id: package
      working-directory: /github-builder/openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      working-directory: /github-builder/openwrt
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc) V=s || make -j4 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: /github-builder/openwrt/bin

    - name: Organize files
      id: organize
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      working-directory: /github-builder/openwrt/bin/targets
      run: |
        cd */*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "== Time：$(date +'%Y-%m-%d %H:%M:%S') =="
        echo "release_tag=$(date +"%Y.%m.%d-%H%M%S")" >> $GITHUB_OUTPUT
        touch release.txt
        echo "status=success" >> $GITHUB_OUTPUT

    - name: Generate release body
      if: steps.compile.outputs.status == 'success' && !cancelled()
      run: |
        echo "![](https://img.shields.io/github/downloads/${{ github.repository }}/${{ steps.tag.outputs.release_tag }}/total?style=flat-square)" >> release.txt

    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        name: ${{ env.OPNAME }}
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
